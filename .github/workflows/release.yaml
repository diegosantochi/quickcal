name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release-setup:
    runs-on: ubuntu-latest
    name: Release setup
    outputs:
      version: ${{ steps.meta.outputs.version }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Latest tag
        id: meta
        run: echo "version=$(git describe --tags)" >> $GITHUB_OUTPUT

      - name: Release creation
        run: gh release create ${{ steps.meta.outputs.version }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: release-setup
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows-latest
            goarch: arm64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          check-latest: true

      - name: Name binary
        id: bin-name
        run: |-
          if '${{ matrix.goos }}' == 'windows'; then
            extension=".exe";
          else
            extension="";
          fi
          echo "bin-name=${{ matrix.goos }}-${{ matrix.goarch }}-qc${extension}" >> $GITHUB_OUTPUT

      - name: Build
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o bin/${{ steps.bin-name.outputs.bin-name }} .

      - name: Upload binary
        run: gh release upload ${{ needs.release-setup.outputs.version }} bin/${{ steps.bin-name.outputs.bin-name }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
